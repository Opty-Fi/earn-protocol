name: Manual Earn protocol piepline

on:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Required)
        required: true


jobs:
  lint-compile-analyze-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    
    env:
      MAINNET_NODE_URL: ${{ secrets.MAINNET_NODE_URL}}
      COINMARKETCAP_API: ${{ secrets.COINMARKETCAP_API}}
      POLYGON_NODE_URL: ${{ secrets.POLYGON_NODE_URL}}
      AVALANCHE_NODE_URL: ${{ secrets.AVALANCHE_NODE_URL}}
      REPORT_GAS: true
      MNEMONIC: ${{ secrets.MNEMONIC}}
      STAGING_NETWORK_URL: ${{secrets.STAGING_NETWORK_URL}}
      STRATEGY_DIVISOR: 2
      MORALIS_APP_ID: ${{ secrets.MORALIS_APP_ID}}
      MORALIS_SERVER_URL: ${{ secrets.MORALIS_SERVER_URL}}
      IGNORED_VAULTS: opNEWO-Invst,opAAVE-Invst,opAPE-Invst,opLINK-Invst,opMANA-Invst,opSUSHI-Invst,opENS-Invst,opCOMP-Invst,opIMX-Invst,opALCX-Invst,opCRV-Invst,opCVX-Invst,opYFI-Invst

    steps:
      - name: Checkout Use Node.js ${{ matrix.node-version}}
        uses: actions/checkout@v2
        with:
         token: ${{secrets.PAT}}
         submodules: recursive
         ref: ${{ github.event.inputs.git-ref }}
      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        with:
          path: '**/node_modules'
          key: npm-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: npm-v2-
      - name: Install
        run: |
          yarn install --frozen-lockfile
      - name: Lint
        run: |
          yarn lint
      - name: Compile
        run: |
          yarn compile
      - name: Optyfi-SDK Mainnet
        run: |
          yarn typechain && yarn optyfi-sdk:mainnet
      - name: Run Slither
        uses: crytic/slither-action@v0.1.0
        continue-on-error: true
        id: slither
        with:
          node-version: 16
      - name: Test
        run: |
          yarn test-fast:mainnet
          yarn test-fast:integration:mainnet
          yarn test-fast:emergency-brake
          yarn test-fast:vaultv3-upgrade-test:mainnet
          yarn test-fast:vaultv4-upgrade-test:mainnet
          yarn test-fast:vaultv4-upgrade-test:polygon
          yarn test-fast:vault-strategy:mainnet
          yarn test-fast:vault-strategy:polygon
          yarn test-fast:vault-strategy:avalanche
      - name: Send GitHub Action trigger data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
         payload: |
                {
                 "title": "Lint, Compile and Test",
                 "status": "${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
