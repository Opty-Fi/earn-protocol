/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RegistryV2, RegistryV2Interface } from "../RegistryV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "allowWhitelistedState",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogAllowWhitelistedStateVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "discontinued",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogDiscontinueVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "isLimitedState",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogLimitStateVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogLiquidityPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "adapter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogLiquidityPoolToAdapter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "minimumDepositAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogMinimumDepositAmountVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueCap",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogQueueCapVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "lowerLimit",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "upperLimit",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogRPPoolRatings",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "rate",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogRateLiquidityPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "rate",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogRateSwapPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "canBorrow",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogRiskProfile",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogSwapPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "adapter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogSwapPoolToAdapter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokensHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogTokensToTokensHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "unpaused",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogUnpauseVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "userDepositCap",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogUserDepositCapVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "totalValueLockedLimitInUnderlying",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogVaultTotalValueLockedLimitInUnderlying",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "financeOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferFinanceOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "optyDistributor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferOPTYDistributor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "riskOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferRiskOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategyOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferStrategyOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferTreasury",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_riskProfileCode",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "lowerLimit",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "upperLimit",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.PoolRatingsRange",
        name: "_poolRatingRange",
        type: "tuple",
      },
    ],
    name: "addRiskProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_riskProfileCodes",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "_names",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_symbols",
        type: "string[]",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "lowerLimit",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "upperLimit",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.PoolRatingsRange[]",
        name: "_poolRatingRanges",
        type: "tuple[]",
      },
    ],
    name: "addRiskProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "approveLiquidityPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pools",
        type: "address[]",
      },
    ],
    name: "approveLiquidityPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "adapter",
            type: "address",
          },
        ],
        internalType: "struct DataTypes.PoolAdapter[]",
        name: "_poolAdapters",
        type: "tuple[]",
      },
    ],
    name: "approveLiquidityPoolAndMapToAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_adapter",
        type: "address",
      },
    ],
    name: "approveLiquidityPoolAndMapToAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "approveSwapPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pools",
        type: "address[]",
      },
    ],
    name: "approveSwapPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "adapter",
            type: "address",
          },
        ],
        internalType: "struct DataTypes.PoolAdapter[]",
        name: "_poolAdapters",
        type: "tuple[]",
      },
    ],
    name: "approveSwapPoolAndMapToAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_adapter",
        type: "address",
      },
    ],
    name: "approveSwapPoolAndMapToAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "approveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "approveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_tokensHash",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "approveTokenAndMapToTokensHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "tokensHash",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
        ],
        internalType: "struct DataTypes.TokensHashDetail[]",
        name: "_tokensHashesDetails",
        type: "tuple[]",
      },
    ],
    name: "approveTokenAndMapToTokensHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "aprOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract RegistryProxy",
        name: "_registryProxy",
        type: "address",
      },
    ],
    name: "become",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "financeOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFinanceOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getHarvestCodeProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "getLiquidityPool",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "rating",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isLiquidityPool",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.LiquidityPool",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "getLiquidityPoolToAdapter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getODEFIVaultBooster",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOPTYDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRiskManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRiskOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_riskProfileCode",
        type: "uint256",
      },
    ],
    name: "getRiskProfile",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "var0",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "lowerLimit",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "upperLimit",
                type: "uint8",
              },
            ],
            internalType: "struct DataTypes.PoolRatingsRange",
            name: "poolRatingsRange",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
        ],
        internalType: "struct DataTypes.RiskProfile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRiskProfileList",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStrategyOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStrategyProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "getSwapPool",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "rating",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isLiquidityPool",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.LiquidityPool",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "getSwapPoolToAdapter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenHashes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getTokensHashByIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_tokensHash",
        type: "bytes32",
      },
    ],
    name: "getTokensHashIndexByHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_tokensHash",
        type: "bytes32",
      },
    ],
    name: "getTokensHashToTokenList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestCodeProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "investStrategyRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "isApprovedToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidityPoolToAdapter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidityPools",
    outputs: [
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isLiquidityPool",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "odefiVaultBooster",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "opty",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optyDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optyStakingRateBalancer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRegistryImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "rate",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.PoolRate[]",
        name: "_poolRates",
        type: "tuple[]",
      },
    ],
    name: "rateLiquidityPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_rate",
        type: "uint8",
      },
    ],
    name: "rateLiquidityPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_rate",
        type: "uint8",
      },
    ],
    name: "rateSwapPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "rate",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.PoolRate[]",
        name: "_poolRates",
        type: "tuple[]",
      },
    ],
    name: "rateSwapPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registryImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "removeRiskProfile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pools",
        type: "address[]",
      },
    ],
    name: "revokeLiquidityPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "revokeLiquidityPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "revokeSwapPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pools",
        type: "address[]",
      },
    ],
    name: "revokeSwapPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "revokeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "revokeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "riskManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "riskOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "riskProfilesArray",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_financeOperator",
        type: "address",
      },
    ],
    name: "setFinanceOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_harvestCodeProvider",
        type: "address",
      },
    ],
    name: "setHarvestCodeProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_adapter",
        type: "address",
      },
    ],
    name: "setLiquidityPoolToAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "adapter",
            type: "address",
          },
        ],
        internalType: "struct DataTypes.PoolAdapter[]",
        name: "_poolAdapters",
        type: "tuple[]",
      },
    ],
    name: "setLiquidityPoolToAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_odefiVaultBooster",
        type: "address",
      },
    ],
    name: "setODEFIVaultBooster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_opty",
        type: "address",
      },
    ],
    name: "setOPTY",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_optyDistributor",
        type: "address",
      },
    ],
    name: "setOPTYDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "setOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_riskManager",
        type: "address",
      },
    ],
    name: "setRiskManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_riskOperator",
        type: "address",
      },
    ],
    name: "setRiskOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategyOperator",
        type: "address",
      },
    ],
    name: "setStrategyOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategyProvider",
        type: "address",
      },
    ],
    name: "setStrategyProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_adapter",
        type: "address",
      },
    ],
    name: "setSwapPoolToAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "adapter",
            type: "address",
          },
        ],
        internalType: "struct DataTypes.PoolAdapter[]",
        name: "_poolAdapters",
        type: "tuple[]",
      },
    ],
    name: "setSwapPoolToAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_tokensHash",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "setTokensHashToTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "tokensHash",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "tokens",
            type: "address[]",
          },
        ],
        internalType: "struct DataTypes.TokensHashDetail[]",
        name: "_tokensHashesDetails",
        type: "tuple[]",
      },
    ],
    name: "setTokensHashToTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "swapPoolToAdapter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "swapPools",
    outputs: [
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isLiquidityPool",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensHashIndexes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokensHashToTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_riskProfileCode",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "lowerLimit",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "upperLimit",
            type: "uint8",
          },
        ],
        internalType: "struct DataTypes.PoolRatingsRange",
        name: "_poolRatingRange",
        type: "tuple",
      },
    ],
    name: "updateRPPoolRatings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vaultToVaultConfiguration",
    outputs: [
      {
        internalType: "bool",
        name: "discontinued",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "unpaused",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isLimitedState",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "allowWhitelistedState",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "withdrawalFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userDepositCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalValueLockedLimitInUnderlying",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueCap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedUsers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalFeeRange",
    outputs: [
      {
        internalType: "uint256",
        name: "lowerLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "upperLimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50614018806100206000396000f3fe608060405234801561001057600080fd5b50600436106105255760003560e01c806384e37fbf116102af578063ca70de1711610172578063e990b46c116100d9578063f39c38a011610092578063f39c38a014610b12578063f67f520314610b1a578063fa0ad89614610b2d578063fabee0e614610b40578063fc50f22414610b48578063fe794f9314610b5b57610525565b8063e990b46c14610aab578063ec58114614610abe578063edd0fd7e14610ad1578063ef1bbb9814610ad9578063f0f4426014610aec578063f1c49cee14610aff57610525565b8063d71f05e61161012b578063d71f05e614610a5a578063d9cafe7214610a62578063db9d20b914610a75578063e1e1a62e14610a88578063e486033914610a90578063e7f43c6814610aa357610525565b8063ca70de17146109f3578063cbd6e6c314610a06578063cdef23db14610a19578063d117f0f214610a2c578063d3af584c14610a3f578063d41fa52914610a5257610525565b80639fac5d4a11610216578063a9f9e686116101cf578063a9f9e6861461098c578063adbd11551461099f578063ae0cd299146109b2578063b3ab15fb146109c5578063b7407bf6146109d8578063bcd2c20f146109e057610525565b80639fac5d4a1461092d578063a1194c8e14610935578063a263100614610948578063a7b61c511461095e578063a7d8c1a414610966578063a99e77211461097957610525565b8063940e5ff411610268578063940e5ff4146108cf57806394990bd8146108e25780639611ad2d146108ea578063992812b7146108f25780639be14283146108fa5780639ec39e2f1461090d57610525565b806384e37fbf1461085e5780638a16ce86146108665780638bb018101461086e5780638fca99b214610896578063923bb7ff146108a9578063933f4eef146108bc57610525565b80634ad8efe6116103f7578063689589a21161035e57806379b39f8d1161031757806379b39f8d146107f55780637af0e557146108085780637f20bd61146108105780637f70cc921461082357806380b2edd81461082b5780638346525f1461083e57610525565b8063689589a2146107975780636afe4cbe1461079f5780636cc1761e146107b25780636fa97306146107ba57806370011e61146107cf578063761125fc146107e257610525565b80635aa6e675116103b05780635aa6e675146107465780635ce849881461074e5780635d3cae151461076157806361660c5e1461077457806361d027b31461077c57806362ca84601461078457610525565b80634ad8efe6146106f55780634cacbb42146107085780635251480014610710578063570ca735146107235780635812de431461072b5780635967f7ee1461073e57610525565b80632d5ad3d51161049b57806339b70e381161045457806339b70e38146106995780633c99c4cb146106a15780633feda70c146106b4578063466dbe80146106c757806347842663146106da5780634a5175f4146106e257610525565b80632d5ad3d5146106255780632e465b29146106455780632ea8f44e14610658578063314e5fee146106605780633753c63714610673578063379fc9b91461068657610525565b80631d1628b3116104ed5780631d1628b3146105b15780631e57e187146105d15780631e702c85146105e457806326c29c1c146105f7578063289b3c0d1461060a5780632ae948631461061257610525565b8063039bcf8e1461052a57806305415996146105535780630af3a496146105685780630b0fd47e1461057d5780631a24edce1461059e575b600080fd5b61053d61053836600461351c565b610b6e565b60405161054a9190613ee7565b60405180910390f35b61055b610bb6565b60405161054a9190613a8b565b61057b6105763660046135c8565b610bc5565b005b61059061058b36600461351c565b610c2c565b60405161054a929190613f9a565b61057b6105ac36600461351c565b610c4a565b6105c46105bf366004613926565b610c80565b60405161054a9190613b70565b61057b6105df36600461393e565b610c92565b61057b6105f2366004613603565b610cf7565b61057b61060536600461351c565b610d8d565b61055b610dd9565b61053d61062036600461351c565b610de8565b61063861063336600461351c565b610e2c565b60405161054a9190613b24565b61057b61065336600461351c565b610e4a565b61055b610e7d565b61057b61066e36600461351c565b610e8c565b61057b61068136600461351c565b610f79565b61057b61069436600461399b565b61101c565b61055b611058565b61057b6106af366004613593565b611067565b61057b6106c236600461351c565b61109b565b61057b6106d536600461375a565b6110ce565b61055b611196565b61057b6106f03660046136ca565b6111a5565b61057b61070336600461355b565b61121b565b61055b61128c565b61057b61071e366004613825565b61129b565b61055b6113bc565b6105c4610739366004613926565b6113cb565b61055b6113ec565b61055b6113fb565b61057b61075c3660046135c8565b61140a565b61057b61076f366004613926565b611464565b61055b611497565b61055b6114a6565b61057b61079236600461351c565b6114b5565b61055b6115a2565b61057b6107ad366004613a17565b6115b1565b61055b6115e5565b6107c26115f4565b60405161054a9190613aec565b61057b6107dd36600461393e565b61164c565b61057b6107f0366004613603565b6116a5565b61057b61080336600461351c565b61173b565b61055b611828565b61057b61081e3660046136ca565b611837565b61055b6118ad565b61057b61083936600461351c565b6118bc565b61085161084c366004613926565b6118ef565b60405161054a9190613a9f565b61055b61195e565b61055b61196d565b61088161087c36600461351c565b61197c565b60405161054a99989796959493929190613b2f565b6106386108a436600461355b565b6119d0565b61055b6108b736600461351c565b6119f0565b61057b6108ca36600461351c565b611a0e565b6105906108dd36600461351c565b611a41565b61055b611a5f565b61055b611a6e565b61055b611a7d565b61055b61090836600461351c565b611a8c565b61092061091b366004613926565b611aa7565b60405161054a9190613f03565b61055b611c42565b61057b61094336600461351c565b611c51565b610950611d82565b60405161054a929190613f8c565b61055b611d8b565b61057b6109743660046135c8565b611d9a565b61057b6109873660046135c8565b611df4565b61057b61099a3660046135c8565b611e4e565b6105c46109ad366004613926565b611e9b565b61057b6109c036600461351c565b611ead565b61057b6109d336600461351c565b611f50565b61055b611ff3565b61057b6109ee36600461375a565b612002565b61055b610a0136600461351c565b61208b565b6105c4610a14366004613926565b6120a9565b61057b610a2736600461355b565b6120c7565b61057b610a3a36600461351c565b612104565b61057b610a4d36600461351c565b6121af565b6107c26121e2565b61055b612238565b61057b610a7036600461355b565b612247565b61057b610a8336600461355b565b61227a565b61055b6122e1565b610638610a9e36600461351c565b6122f0565b61055b612305565b61057b610ab936600461351c565b612314565b61057b610acc3660046135c8565b6123b7565b61055b612411565b61057b610ae7366004613603565b612420565b61057b610afa36600461351c565b6124c6565b61055b610b0d36600461351c565b612569565b61055b612584565b61057b610b28366004613603565b612593565b61057b610b3b366004613593565b612639565b61055b61266d565b61057b610b5636600461351c565b61267c565b6105c4610b69366004613926565b612769565b610b76613178565b506001600160a01b0381166000908152600d602090815260409182902082518084019093525460ff8082168452610100909104161515908201525b919050565b6001546001600160a01b031690565b6004546001600160a01b03163314610bf85760405162461bcd60e51b8152600401610bef90613d12565b60405180910390fd5b60005b8151811015610c2857610c20828281518110610c1357fe5b6020026020010151612776565b600101610bfb565b5050565b600c6020526000908152604090205460ff8082169161010090041682565b6004546001600160a01b03163314610c745760405162461bcd60e51b8152600401610bef90613d12565b610c7d816127d0565b50565b600b6020526000908152604090205481565b6004546001600160a01b03163314610cbc5760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610cec57610ce4828281518110610cd757fe5b602002602001015161282a565b600101610cbf565b50610c288282612883565b6004546001600160a01b03163314610d215760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610c2857610d4d828281518110610d3c57fe5b60200260200101516000015161293b565b610d85828281518110610d5c57fe5b602002602001015160000151838381518110610d7457fe5b602002602001015160200151612999565b600101610d24565b6004546001600160a01b03163314610db75760405162461bcd60e51b8152600401610bef90613d12565b601b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b610df0613178565b506001600160a01b03166000908152600c602090815260409182902082518084019093525460ff80821684526101009091041615159082015290565b6001600160a01b03166000908152600a602052604090205460ff1690565b6004546001600160a01b03163314610e745760405162461bcd60e51b8152600401610bef90613d12565b610c7d81612a94565b6002546001600160a01b031681565b6004546001600160a01b03163314610eb65760405162461bcd60e51b8152600401610bef90613d12565b306001600160a01b0316816001600160a01b03166328c1f99b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ef957600080fd5b505afa158015610f0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f31919061353f565b6001600160a01b031614610f575760405162461bcd60e51b8152600401610bef90613e1f565b601e80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610fa35760405162461bcd60e51b8152600401610bef90613b79565b6001600160a01b038116610fc95760405162461bcd60e51b8152600401610bef90613bb0565b600180546001600160a01b0319166001600160a01b0383811691909117918290556040513392909116907fcebe670e32fa7e67739a1eb996a0fa247dec70da938e96fd5b0a5dadd80a93ce90600090a350565b6002546001600160a01b031633146110465760405162461bcd60e51b8152600401610bef90613de8565b61105284848484612af2565b50505050565b601a546001600160a01b031681565b6002546001600160a01b031633146110915760405162461bcd60e51b8152600401610bef90613de8565b610c288282612cda565b6004546001600160a01b031633146110c55760405162461bcd60e51b8152600401610bef90613d12565b610c7d8161293b565b6004546001600160a01b031633146110f85760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610c285760005b82828151811061111357fe5b602002602001015160200151518110156111555761114d83838151811061113657fe5b6020026020010151602001518281518110610cd757fe5b600101611107565b5061118e82828151811061116557fe5b60200260200101516000015183838151811061117d57fe5b602002602001015160200151612883565b6001016110fb565b6018546001600160a01b031681565b6002546001600160a01b031633146111cf5760405162461bcd60e51b8152600401610bef90613de8565b60005b8151811015610c28576112138282815181106111ea57fe5b60200260200101516000015183838151811061120257fe5b602002602001015160200151612d76565b6001016111d2565b6004546001600160a01b031633146112455760405162461bcd60e51b8152600401610bef90613d12565b6001600160a01b0382166000908152600c6020526040902054610100900460ff166112825760405162461bcd60e51b8152600401610bef90613d90565b610c288282612e12565b6016546001600160a01b031681565b6002546001600160a01b031633146112c55760405162461bcd60e51b8152600401610bef90613de8565b60008451116112e65760405162461bcd60e51b8152600401610bef90613d6d565b80518451146113075760405162461bcd60e51b8152600401610bef90613db9565b82518451146113285760405162461bcd60e51b8152600401610bef90613e9a565b81518451146113495760405162461bcd60e51b8152600401610bef90613c4b565b60005b84518110156113b5576113ad85828151811061136457fe5b602002602001015185838151811061137857fe5b602002602001015185848151811061138c57fe5b60200260200101518585815181106113a057fe5b6020026020010151612af2565b60010161134c565b5050505050565b6004546001600160a01b031681565b6000601482815481106113da57fe5b90600052602060002001549050919050565b601e546001600160a01b031690565b6000546001600160a01b031681565b6004546001600160a01b031633146114345760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610c285761145c82828151811061144f57fe5b602002602001015161293b565b600101611437565b6002546001600160a01b0316331461148e5760405162461bcd60e51b8152600401610bef90613de8565b610c7d81612f0d565b6001546001600160a01b031681565b6005546001600160a01b031681565b6004546001600160a01b031633146114df5760405162461bcd60e51b8152600401610bef90613d12565b306001600160a01b0316816001600160a01b03166328c1f99b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561152257600080fd5b505afa158015611536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155a919061353f565b6001600160a01b0316146115805760405162461bcd60e51b8152600401610bef90613e1f565b601880546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b031681565b6002546001600160a01b031633146115db5760405162461bcd60e51b8152600401610bef90613de8565b610c288282612fd7565b601e546001600160a01b031681565b6060601480548060200260200160405190810160405280929190818152602001828054801561164257602002820191906000526020600020905b81548152602001906001019080831161162e575b5050505050905090565b6004546001600160a01b031633146116765760405162461bcd60e51b8152600401610bef90613d12565b61167f8161307e565b61169b5760405162461bcd60e51b8152600401610bef90613cc8565b610c288282612883565b6004546001600160a01b031633146116cf5760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610c28576116fb8282815181106116ea57fe5b602002602001015160000151612a94565b61173382828151811061170a57fe5b60200260200101516000015183838151811061172257fe5b602002602001015160200151612e12565b6001016116d2565b6004546001600160a01b031633146117655760405162461bcd60e51b8152600401610bef90613d12565b306001600160a01b0316816001600160a01b03166328c1f99b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117a857600080fd5b505afa1580156117bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e0919061353f565b6001600160a01b0316146118065760405162461bcd60e51b8152600401610bef90613e1f565b601980546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031690565b6002546001600160a01b031633146118615760405162461bcd60e51b8152600401610bef90613de8565b60005b8151811015610c28576118a582828151811061187c57fe5b60200260200101516000015183838151811061189457fe5b602002602001015160200151612cda565b600101611864565b601b546001600160a01b031681565b6004546001600160a01b031633146118e65760405162461bcd60e51b8152600401610bef90613d12565b610c7d8161282a565b6000818152600b602090815260409182902060010180548351818402810184019094528084526060939283018282801561195257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611934575b50505050509050919050565b6009546001600160a01b031681565b6019546001600160a01b031690565b60106020526000908152604090208054600282015460038301546004840154600585015460069095015460ff8086169661010087048216966201000081048316966301000000909104909216949193919289565b601160209081526000928352604080842090915290825290205460ff1681565b6001600160a01b039081166000908152600e60205260409020541690565b6004546001600160a01b03163314611a385760405162461bcd60e51b8152600401610bef90613d12565b610c7d816130e1565b600d6020526000908152604090205460ff8082169161010090041682565b601c546001600160a01b031681565b6003546001600160a01b031681565b6016546001600160a01b031690565b600e602052600090815260409020546001600160a01b031681565b611aaf61318f565b6000828152600f6020908152604091829020825160c0810184528154815260018083015460ff90811615158386015285518087018752600280860154808416835261010090819004841683890152858901929092526003860154909216151560608501526004850180548851948116159092026000190190911691909104601f810186900486028301860190965285825291949293608086019391929190830182828015611b9e5780601f10611b7357610100808354040283529160200191611b9e565b820191906000526020600020905b815481529060010190602001808311611b8157829003601f168201915b505050918352505060058201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015611c325780601f10611c0757610100808354040283529160200191611c32565b820191906000526020600020905b815481529060010190602001808311611c1557829003601f168201915b5050505050815250509050919050565b601d546001600160a01b031681565b806001600160a01b0316635aa6e6756040518163ffffffff1660e01b815260040160206040518083038186803b158015611c8a57600080fd5b505afa158015611c9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc2919061353f565b6001600160a01b0316336001600160a01b031614611cf25760405162461bcd60e51b8152600401610bef90613bd5565b806001600160a01b03166315ba56e56040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611d2d57600080fd5b505af1158015611d41573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d659190613983565b15610c7d5760405162461bcd60e51b8152600401610bef90613ca1565b60125460135482565b6019546001600160a01b031681565b6004546001600160a01b03163314611dc45760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610c2857611dec828281518110611ddf57fe5b60200260200101516130e1565b600101611dc7565b6004546001600160a01b03163314611e1e5760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610c2857611e46828281518110611e3957fe5b6020026020010151612a94565b600101611e21565b6004546001600160a01b03163314611e785760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610c2857611e93828281518110610cd757fe5b600101611e7b565b6000908152600b602052604090205490565b6000546001600160a01b03163314611ed75760405162461bcd60e51b8152600401610bef90613b79565b6001600160a01b038116611efd5760405162461bcd60e51b8152600401610bef90613bb0565b600280546001600160a01b0319166001600160a01b0383811691909117918290556040513392909116907fe0b30518e12df67a42f08188523b49c69cbf481de8356250e3cdf8c2aaf7497e90600090a350565b6000546001600160a01b03163314611f7a5760405162461bcd60e51b8152600401610bef90613b79565b6001600160a01b038116611fa05760405162461bcd60e51b8152600401610bef90613bb0565b600480546001600160a01b0319166001600160a01b0383811691909117918290556040513392909116907fa3fa0a434ea340b210144ceac453176b4e181b4467d8692e7144a6b0ab4ac07690600090a350565b6017546001600160a01b031681565b6004546001600160a01b0316331461202c5760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610c285761205882828151811061204757fe5b60200260200101516020015161307e565b6120745760405162461bcd60e51b8152600401610bef90613cc8565b61208382828151811061116557fe5b60010161202f565b6001600160a01b039081166000908152601f60205260409020541690565b601581815481106120b657fe5b600091825260209091200154905081565b6004546001600160a01b031633146120f15760405162461bcd60e51b8152600401610bef90613d12565b6120fa8261293b565b610c288282612999565b6000546001600160a01b0316331461212e5760405162461bcd60e51b8152600401610bef90613b79565b612140816001600160a01b031661312e565b61215c5760405162461bcd60e51b8152600401610bef90613e4a565b600680546001600160a01b0319166001600160a01b0383811691909117918290556040513392909116907ff7ce03f54d3113e6c232684aee8d4326c04d0d25d0880532d5fe20aff52a385290600090a350565b6004546001600160a01b031633146121d95760405162461bcd60e51b8152600401610bef90613d12565b610c7d81612776565b60606015805480602002602001604051908101604052809291908181526020018280548015611642576020028201919060005260206000209081548152602001906001019080831161162e575050505050905090565b6018546001600160a01b031690565b6004546001600160a01b031633146122715760405162461bcd60e51b8152600401610bef90613d12565b61128282612a94565b6004546001600160a01b031633146122a45760405162461bcd60e51b8152600401610bef90613d12565b6001600160a01b0382166000908152600d6020526040902054610100900460ff166120fa5760405162461bcd60e51b8152600401610bef90613d49565b6006546001600160a01b031690565b600a6020526000908152604090205460ff1681565b6004546001600160a01b031690565b6000546001600160a01b0316331461233e5760405162461bcd60e51b8152600401610bef90613b79565b6001600160a01b0381166123645760405162461bcd60e51b8152600401610bef90613bb0565b600380546001600160a01b0319166001600160a01b0383811691909117918290556040513392909116907fbea13b980bfe82b1aba43f1b930ab26252fdea6ef746815f1a17238f1522538090600090a350565b6004546001600160a01b031633146123e15760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610c28576124098282815181106123fc57fe5b60200260200101516127d0565b6001016123e4565b6008546001600160a01b031681565b6004546001600160a01b0316331461244a5760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610c2857600c600083838151811061246657fe5b602090810291909101810151516001600160a01b0316825281019190915260400160002054610100900460ff166124af5760405162461bcd60e51b8152600401610bef90613d90565b6124be82828151811061170a57fe5b60010161244d565b6000546001600160a01b031633146124f05760405162461bcd60e51b8152600401610bef90613b79565b6001600160a01b0381166125165760405162461bcd60e51b8152600401610bef90613bb0565b600580546001600160a01b0319166001600160a01b0383811691909117918290556040513392909116907f62416168b36f7c9244e51510f415e6512f57da42e56fa145081a482f5d5ce4b190600090a350565b601f602052600090815260409020546001600160a01b031681565b6007546001600160a01b031681565b6004546001600160a01b031633146125bd5760405162461bcd60e51b8152600401610bef90613d12565b60005b8151811015610c2857600d60008383815181106125d957fe5b602090810291909101810151516001600160a01b0316825281019190915260400160002054610100900460ff166126225760405162461bcd60e51b8152600401610bef90613d49565b612631828281518110610d5c57fe5b6001016125c0565b6002546001600160a01b031633146126635760405162461bcd60e51b8152600401610bef90613de8565b610c288282612d76565b6003546001600160a01b031690565b6004546001600160a01b031633146126a65760405162461bcd60e51b8152600401610bef90613d12565b306001600160a01b0316816001600160a01b03166328c1f99b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156126e957600080fd5b505afa1580156126fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612721919061353f565b6001600160a01b0316146127475760405162461bcd60e51b8152600401610bef90613e1f565b601680546001600160a01b0319166001600160a01b0392909216919091179055565b601481815481106120b657fe5b6001600160a01b0381166000818152600c6020526040808220805461ff001916908190559051339361010090920460ff161515927f70ef6484131845f6ad6f5fbca17ba970d81b6d88facffe0a86445a26844b735f91a450565b6001600160a01b0381166000818152600d6020526040808220805461ff001916908190559051339361010090920460ff161515927f4030818da6012fbb617aea8987f8c4943f02f785ddb9ec742e9230425f9985c891a450565b6001600160a01b0381166000818152600a6020526040808220805460ff1916600117908190559051339360ff929092161515927f77708ed8f9bdf7c080ae7c78963aa6f52e70010691041c0b8b938a5eb573059991a450565b61288c82613134565b6128a85760405162461bcd60e51b8152600401610bef90613e6f565b60148054600180820183557fce6d7b5282bd9a3661ae061feed1dbda4e52ab073b1f9285be6e155d9c38d4ec90910184905590546000848152600b6020908152604090912060001990920182558351612909939290920191908401906131c7565b50604051339083907f116e2ff1d8e145cf56c90f52edfa42b39a6cea0a2f09e5dc9a165bc545b9dd8c90600090a35050565b6001600160a01b0381166000818152600d6020526040808220805461ff00191661010090811791829055915133949290910460ff161515927f4030818da6012fbb617aea8987f8c4943f02f785ddb9ec742e9230425f9985c891a450565b306001600160a01b0316816001600160a01b03166328c1f99b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156129dc57600080fd5b505afa1580156129f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a14919061353f565b6001600160a01b031614612a3a5760405162461bcd60e51b8152600401610bef90613e1f565b6001600160a01b038281166000818152601f602052604080822080546001600160a01b031916948616948517905551339392917fe95ad8ba9e5295bf7e612148393e3ed521a622d0a1255541fe01eb47bbbc9e0491a45050565b6001600160a01b0381166000818152600c6020526040808220805461ff00191661010090811791829055915133949290910460ff161515927f70ef6484131845f6ad6f5fbca17ba970d81b6d88facffe0a86445a26844b735f91a450565b6000848152600f602052604090206003015460ff1615612b245760405162461bcd60e51b8152600401610bef90613c76565b6000835111612b455760405162461bcd60e51b8152600401610bef90613bfa565b6000825111612b665760405162461bcd60e51b8152600401610bef90613ce9565b60158054600181019091557f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475018490556000848152600f602090815260409091208451612bbb9260049092019186019061322c565b506000848152600f602090815260409091208351612be19260059092019185019061322c565b5080516000858152600f602090815260408083206002810180549387015160ff1994851660ff9788161761ff0019166101009188169190910217905560155460001901808255600390910180549093166001179283905590519293919091161515917ff1399df5dc4422c1043b8e73d714594b13e53e28b0b6ac5fd34a4ddb3bc0eaad90612c70903390613a8b565b60405180910390a46000848152600f60205260409081902060028101549054915160ff6101008304811693921691907f4094bfe2123affbdc4bb8b026f1f9e040399a1f1ea10d34debea7d9767b8532390612ccc903390613a8b565b60405180910390a450505050565b6001600160a01b0382166000908152600d6020526040902054610100900460ff16612d175760405162461bcd60e51b8152600401610bef90613d49565b6001600160a01b0382166000818152600d6020526040808220805460ff191660ff868116919091179182905591513394919092169290917f36c23962ddf7d6945ea8a6346b53e9e4caecc019e05df302102e8ca9a44e6aca9190a45050565b6001600160a01b0382166000908152600c6020526040902054610100900460ff16612db35760405162461bcd60e51b8152600401610bef90613d90565b6001600160a01b0382166000818152600c6020526040808220805460ff191660ff868116919091179182905591513394919092169290917fcf84b287f966c5e78b7ee4a4e83629c9f8e12d5103506289ed75f665f9be60349190a45050565b306001600160a01b0316816001600160a01b03166328c1f99b6040518163ffffffff1660e01b815260040160206040518083038186803b158015612e5557600080fd5b505afa158015612e69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e8d919061353f565b6001600160a01b031614612eb35760405162461bcd60e51b8152600401610bef90613e1f565b6001600160a01b038281166000818152600e602052604080822080546001600160a01b031916948616948517905551339392917f1e71d63d9ed2b661b86f8983b9ae7b77b0765ffce598e3a86665d1482823211f91a45050565b601554811115612f2f5760405162461bcd60e51b8152600401610bef90613c21565b600060158281548110612f3e57fe5b6000918252602080832090910154808352600f90915260409091206003015490915060ff16612f7f5760405162461bcd60e51b8152600401610bef90613ec3565b6000818152600f6020526040808220600301805460ff1916905551819084907ff1399df5dc4422c1043b8e73d714594b13e53e28b0b6ac5fd34a4ddb3bc0eaad90612fcb903390613a8b565b60405180910390a45050565b6000828152600f602052604090206003015460ff166130085760405162461bcd60e51b8152600401610bef90613ec3565b80516000838152600f60209081526040918290206002810180549286015160ff1990931660ff9586161761ff00191661010093861684021790819055905492519181048416931691907f4094bfe2123affbdc4bb8b026f1f9e040399a1f1ea10d34debea7d9767b8532390612fcb903390613a8b565b6000805b82518110156130d857600a600084838151811061309b57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff166130d0576000915050610bb1565b600101613082565b50600192915050565b6001600160a01b0381166000818152600a6020526040808220805460ff19169055513392907f77708ed8f9bdf7c080ae7c78963aa6f52e70010691041c0b8b938a5eb5730599908390a450565b3b151590565b60145460009061314657506001610bb1565b6000828152600b602052604090205460148054849290811061316457fe5b906000526020600020015414159050919050565b604080518082019091526000808252602082015290565b6040805160c081018252600080825260208201529081016131ae613178565b8152600060208201526060604082018190529081015290565b82805482825590600052602060002090810192821561321c579160200282015b8281111561321c57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906131e7565b506132289291506132a6565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061326d57805160ff191683800117855561329a565b8280016001018555821561329a579182015b8281111561329a57825182559160200191906001019061327f565b506132289291506132c5565b5b808211156132285780546001600160a01b03191681556001016132a7565b5b8082111561322857600081556001016132c6565b80356132e581613ff6565b92915050565b600082601f8301126132fb578081fd5b813561330e61330982613fd6565b613faf565b81815291506020808301908481018184028601820187101561332f57600080fd5b60005b8481101561335757813561334581613ff6565b84529282019290820190600101613332565b505050505092915050565b600082601f830112613372578081fd5b813561338061330982613fd6565b818152915060208083019084810160005b84811015613357576133a8888484358a010161342e565b84529282019290820190600101613391565b600082601f8301126133ca578081fd5b81356133d861330982613fd6565b81815291506020808301908481016040808502870183018810156133fb57600080fd5b60005b858110156134225761341089846134d9565b855293830193918101916001016133fe565b50505050505092915050565b600082601f83011261343e578081fd5b813567ffffffffffffffff811115613454578182fd5b613467601f8201601f1916602001613faf565b915080825283602082850101111561347e57600080fd5b8060208401602084013760009082016020015292915050565b6000604082840312156134a8578081fd5b6134b26040613faf565b905081356134bf81613ff6565b81526134ce836020840161350b565b602082015292915050565b6000604082840312156134ea578081fd5b6134f46040613faf565b9050613500838361350b565b81526134ce83602084015b803560ff811681146132e557600080fd5b60006020828403121561352d578081fd5b813561353881613ff6565b9392505050565b600060208284031215613550578081fd5b815161353881613ff6565b6000806040838503121561356d578081fd5b823561357881613ff6565b9150602083013561358881613ff6565b809150509250929050565b600080604083850312156135a5578182fd5b82356135b081613ff6565b91506135bf846020850161350b565b90509250929050565b6000602082840312156135d9578081fd5b813567ffffffffffffffff8111156135ef578182fd5b6135fb848285016132eb565b949350505050565b60006020808385031215613615578182fd5b823567ffffffffffffffff81111561362b578283fd5b8301601f8101851361363b578283fd5b803561364961330982613fd6565b818152838101908385016040808502860187018a1015613667578788fd5b8795505b848610156136bc5780828b031215613681578788fd5b61368a81613faf565b6136948b846132da565b81526136a28b8985016132da565b81890152845260019590950194928601929081019061366b565b509098975050505050505050565b600060208083850312156136dc578182fd5b823567ffffffffffffffff8111156136f2578283fd5b8301601f81018513613702578283fd5b803561371061330982613fd6565b818152838101908385016040808502860187018a101561372e578788fd5b8795505b848610156136bc576137448a83613497565b8452600195909501949286019290810190613732565b6000602080838503121561376c578182fd5b823567ffffffffffffffff80821115613783578384fd5b818501915085601f830112613796578384fd5b81356137a461330982613fd6565b81815284810190848601875b848110156138165781358701604080601f19838f030112156137d0578a8bfd5b6137d981613faf565b828b013581529082013590888211156137f0578b8cfd5b6137fe8e8c848601016132eb565b818c01528652505092870192908701906001016137b0565b50909998505050505050505050565b6000806000806080858703121561383a578182fd5b843567ffffffffffffffff80821115613851578384fd5b818701915087601f830112613864578384fd5b813561387261330982613fd6565b80828252602080830192508086018c828387028901011115613892578889fd5b8896505b848710156138b4578035845260019690960195928101928101613896565b5090985089013593505050808211156138cb578384fd5b6138d788838901613362565b945060408701359150808211156138ec578384fd5b6138f888838901613362565b9350606087013591508082111561390d578283fd5b5061391a878288016133ba565b91505092959194509250565b600060208284031215613937578081fd5b5035919050565b60008060408385031215613950578182fd5b82359150602083013567ffffffffffffffff81111561396d578182fd5b613979858286016132eb565b9150509250929050565b600060208284031215613994578081fd5b5051919050565b60008060008060a085870312156139b0578182fd5b84359350602085013567ffffffffffffffff808211156139ce578384fd5b6139da8883890161342e565b945060408701359150808211156139ef578384fd5b506139fc8782880161342e565b925050613a0c86606087016134d9565b905092959194509250565b60008060608385031215613a29578182fd5b823591506135bf84602085016134d9565b15159052565b60008151808452815b81811015613a6557602081850181015186830182015201613a49565b81811115613a765782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015613ae05783516001600160a01b031683529284019291840191600101613abb565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015613ae057835183529284019291840191600101613b08565b901515815260200190565b9815158952961515602089015294151560408801529215156060870152608086019190915260a085015260c084015260e08301526101008201526101200190565b90815260200190565b6020808252601f908201527f63616c6c6572206973206e6f7420686176696e6720676f7665726e616e636500604082015260600190565b6020808252600b908201526a216164647265737328302960a81b604082015260600190565b6020808252600b908201526a21676f7665726e616e636560a81b604082015260600190565b6020808252600d908201526c52505f6e616d655f656d70747960981b604082015260600190565b60208082526010908201526f092dcecc2d8d2c8bea4e0bed2dcc8caf60831b604082015260600190565b602080825260119082015270042a4a0bee6f2dac4ded8e698cadccee8d607b1b604082015260600190565b60208082526011908201527052505f616c72656164795f65786973747360781b604082015260600190565b6020808252600d908201526c085d5b985d5d1a1bdc9a5e9959609a1b604082015260600190565b60208082526007908201526621746f6b656e7360c81b604082015260600190565b6020808252600f908201526e52505f73796d626f6c5f656d70747960881b604082015260600190565b6020808252601a908201527f63616c6c6572206973206e6f7420746865206f70657261746f72000000000000604082015260600190565b6020808252600a90820152692173776170506f6f6c7360b01b604082015260600190565b6020808252600990820152680216c656e6774683e360bc1b604082015260600190565b6020808252600f908201526e216c6971756964697479506f6f6c7360881b604082015260600190565b602080825260159082015274042a4a0bea0deded8a4c2e8d2dccee698cadccee8d605b1b604082015260600190565b6020808252601f908201527f63616c6c6572206973206e6f7420746865207269736b206f70657261746f7200604082015260600190565b602080825260119082015270085c9959da5cdd1c9e50dbdb9d1c9858dd607a1b604082015260600190565b6020808252600b908201526a085a5cd0dbdb9d1c9858dd60aa1b604082015260600190565b602080825260119082015270042bed2e69ccaeea8ded6cadce690c2e6d607b1b604082015260600190565b6020808252600f908201526e042a4a0bedcc2dacae698cadccee8d608b1b604082015260600190565b6020808252600a90820152692152705f45786973747360b01b604082015260600190565b815160ff16815260209182015115159181019190915260400190565b60006020825282516020830152602083015115156040830152604083015160ff815116606084015260ff6020820151166080840152506060830151613f4b60a0840182613a3a565b50608083015160e060c0840152613f66610100840182613a40565b905060a0840151601f198483030160e0850152613f838282613a40565b95945050505050565b918252602082015260400190565b60ff9290921682521515602082015260400190565b60405181810167ffffffffffffffff81118282101715613fce57600080fd5b604052919050565b600067ffffffffffffffff821115613fec578081fd5b5060209081020190565b6001600160a01b0381168114610c7d57600080fdfea164736f6c634300060c000a";

export class RegistryV2__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<RegistryV2> {
    return super.deploy(overrides || {}) as Promise<RegistryV2>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RegistryV2 {
    return super.attach(address) as RegistryV2;
  }
  connect(signer: Signer): RegistryV2__factory {
    return super.connect(signer) as RegistryV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistryV2Interface {
    return new utils.Interface(_abi) as RegistryV2Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RegistryV2 {
    return new Contract(address, _abi, signerOrProvider) as RegistryV2;
  }
}
