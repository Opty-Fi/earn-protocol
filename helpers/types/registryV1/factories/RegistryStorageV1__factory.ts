/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RegistryStorageV1, RegistryStorageV1Interface } from "../RegistryStorageV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "allowWhitelistedState",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogAllowWhitelistedStateVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogCreditPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "discontinued",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogDiscontinueVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "isLimitedState",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogLimitStateVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogLiquidityPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "adapter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogLiquidityPoolToAdapter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "minimumDepositAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogMinimumDepositAmountVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "queueCap",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogQueueCapVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "lowerLimit",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "upperLimit",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogRPPoolRatings",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "rate",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogRateCreditPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint8",
        name: "rate",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogRateLiquidityPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "canBorrow",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogRiskProfile",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "tokensHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogTokensToTokensHash",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "unpaused",
        type: "bool",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogUnpauseVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "userDepositCap",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogUserDepositCapVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "totalValueLockedLimitInUnderlying",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "LogVaultTotalValueLockedLimitInUnderlying",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "financeOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferFinanceOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "optyDistributor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferOPTYDistributor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "riskOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferRiskOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "strategyOperator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferStrategyOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "TransferTreasury",
    type: "event",
  },
  {
    inputs: [],
    name: "aprOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "creditPools",
    outputs: [
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isLiquidityPool",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "financeOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestCodeProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "investStrategyRegistry",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidityPoolToAdapter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "liquidityPools",
    outputs: [
      {
        internalType: "uint8",
        name: "rating",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isLiquidityPool",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "odefiVaultBooster",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "operator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "opty",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optyDistributor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optyStakingRateBalancer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGovernance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRegistryImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registryImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "riskManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "riskOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "riskProfilesArray",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "strategyProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokensHashIndexes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokensHashToTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "vaultToVaultConfiguration",
    outputs: [
      {
        internalType: "bool",
        name: "discontinued",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "unpaused",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "isLimitedState",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "allowWhitelistedState",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "withdrawalFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userDepositCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalValueLockedLimitInUnderlying",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queueCap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedUsers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalFeeRange",
    outputs: [
      {
        internalType: "uint256",
        name: "lowerLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "upperLimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106e7806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806384e37fbf11610104578063a2631006116100a2578063e486033911610071578063e48603391461034a578063edd0fd7e1461035d578063f39c38a014610365578063fe794f931461036d576101cf565b8063a263100614610311578063a7b61c5114610327578063b7407bf61461032f578063cbd6e6c314610337576101cf565b806394990bd8116100de57806394990bd8146102e65780639611ad2d146102ee5780639be14283146102f65780639fac5d4a14610309576101cf565b806384e37fbf146102965780638bb018101461029e5780638fca99b2146102c6576101cf565b8063570ca7351161017157806361d027b31161014b57806361d027b314610276578063689589a21461027e5780636cc1761e146102865780637f70cc921461028e576101cf565b8063570ca7351461025e5780635aa6e6751461026657806361660c5e1461026e576101cf565b80632ea8f44e116101ad5780632ea8f44e1461023157806339b70e3814610246578063478426631461024e5780634cacbb4214610256576101cf565b80630b0fd47e146101d45780630dfbe91b146101fe5780631d1628b314610211575b600080fd5b6101e76101e23660046105e0565b610380565b6040516101f59291906106c5565b60405180910390f35b6101e761020c3660046105e0565b61039e565b61022461021f366004610636565b6103bc565b6040516101f591906106ae565b6102396103ce565b6040516101f5919061064e565b6102396103dd565b6102396103ec565b6102396103fb565b61023961040a565b610239610419565b610239610428565b610239610437565b610239610446565b610239610455565b610239610464565b610239610473565b6102b16102ac3660046105e0565b610482565b6040516101f59998979695949392919061066d565b6102d96102d4366004610602565b6104d6565b6040516101f59190610662565b6102396104f6565b610239610505565b6102396103043660046105e0565b610514565b61023961052f565b61031961053e565b6040516101f59291906106b7565b610239610547565b610239610556565b610224610345366004610636565b610565565b6102d96103583660046105e0565b610583565b610239610598565b6102396105a7565b61022461037b366004610636565b6105b6565b600c6020526000908152604090205460ff8082169161010090041682565b600d6020526000908152604090205460ff8082169161010090041682565b600b6020526000908152604090205481565b6002546001600160a01b031681565b601a546001600160a01b031681565b6018546001600160a01b031681565b6016546001600160a01b031681565b6004546001600160a01b031681565b6000546001600160a01b031681565b6001546001600160a01b031681565b6005546001600160a01b031681565b6006546001600160a01b031681565b601e546001600160a01b031681565b601b546001600160a01b031681565b6009546001600160a01b031681565b60106020526000908152604090208054600282015460038301546004840154600585015460069095015460ff8086169661010087048216966201000081048316966301000000909104909216949193919289565b601160209081526000928352604080842090915290825290205460ff1681565b601c546001600160a01b031681565b6003546001600160a01b031681565b600e602052600090815260409020546001600160a01b031681565b601d546001600160a01b031681565b60125460135482565b6019546001600160a01b031681565b6017546001600160a01b031681565b6015818154811061057257fe5b600091825260209091200154905081565b600a6020526000908152604090205460ff1681565b6008546001600160a01b031681565b6007546001600160a01b031681565b6014818154811061057257fe5b80356001600160a01b03811681146105da57600080fd5b92915050565b6000602082840312156105f1578081fd5b6105fb83836105c3565b9392505050565b60008060408385031215610614578081fd5b61061e84846105c3565b915061062d84602085016105c3565b90509250929050565b600060208284031215610647578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b9815158952961515602089015294151560408801529215156060870152608086019190915260a085015260c084015260e08301526101008201526101200190565b90815260200190565b918252602082015260400190565b60ff929092168252151560208201526040019056fea164736f6c634300060c000a";

export class RegistryStorageV1__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<RegistryStorageV1> {
    return super.deploy(overrides || {}) as Promise<RegistryStorageV1>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RegistryStorageV1 {
    return super.attach(address) as RegistryStorageV1;
  }
  connect(signer: Signer): RegistryStorageV1__factory {
    return super.connect(signer) as RegistryStorageV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistryStorageV1Interface {
    return new utils.Interface(_abi) as RegistryStorageV1Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RegistryStorageV1 {
    return new Contract(address, _abi, signerOrProvider) as RegistryStorageV1;
  }
}
