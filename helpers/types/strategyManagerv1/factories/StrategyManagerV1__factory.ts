/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StrategyManagerV1, StrategyManagerV1Interface } from "../StrategyManagerV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registryContract",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_vault",
        type: "address",
      },
    ],
    name: "getClaimRewardTokenCode",
    outputs: [
      {
        internalType: "bytes[]",
        name: "_codes",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isBorrow",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.StrategyStep[]",
        name: "_strategySteps",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_registryContract",
        type: "address",
      },
    ],
    name: "getDepositInternalTransactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isBorrow",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.StrategyStep[]",
        name: "_strategySteps",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_registryContract",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingToken",
        type: "address",
      },
    ],
    name: "getLastStrategyStepBalanceLP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isBorrow",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.StrategyStep[]",
        name: "_strategySteps",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_registryContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_wantAmountUT",
        type: "uint256",
      },
    ],
    name: "getOraSomeValueLP",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountLP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isBorrow",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.StrategyStep[]",
        name: "_strategySteps",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_registryContract",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingToken",
        type: "address",
      },
    ],
    name: "getOraValueUT",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountUT",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isBorrow",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.StrategyStep[]",
        name: "_strategySteps",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "registryContract",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "vault",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "initialStepInputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "internalTransactionIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "internalTransactionCount",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.StrategyConfigurationParams",
        name: "_strategyConfigurationParams",
        type: "tuple",
      },
    ],
    name: "getPoolDepositCodes",
    outputs: [
      {
        internalType: "bytes[]",
        name: "_codes",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pool",
            type: "address",
          },
          {
            internalType: "address",
            name: "outputToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isBorrow",
            type: "bool",
          },
        ],
        internalType: "struct DataTypes.StrategyStep[]",
        name: "_strategySteps",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "registryContract",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "vault",
            type: "address",
          },
          {
            internalType: "address",
            name: "underlyingToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "initialStepInputAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "internalTransactionIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "internalTransactionCount",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.StrategyConfigurationParams",
        name: "_strategyConfigurationParams",
        type: "tuple",
      },
    ],
    name: "getPoolWithdrawCodes",
    outputs: [
      {
        internalType: "bytes[]",
        name: "_codes",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registryContract",
        type: "address",
      },
    ],
    name: "getRewardToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_registryContract",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_underlyingToken",
        type: "address",
      },
    ],
    name: "getUnclaimedRewardTokenAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x611a89610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061009d5760003560e01c8063beead42311610070578063beead42314610111578063d5fa54df14610124578063e8f4450d14610144578063f13952cc14610157578063fc3838d31461016a5761009d565b8063298916b2146100a25780632ff4c5e1146100cb5780633b193fe5146100eb57806390c39beb146100fe575b600080fd5b6100b56100b0366004611589565b61017d565b6040516100c291906119d6565b60405180910390f35b6100de6100d936600461153f565b6102ac565b6040516100c29190611963565b6100b56100f93660046116bf565b610351565b6100b561010c366004611704565b610485565b6100b561011f36600461174c565b61079b565b610137610132366004611507565b610913565b6040516100c291906118c4565b6100de6101523660046117b4565b6109a7565b6100b5610165366004611704565b610d8e565b6100de6101783660046117b4565b610fe7565b60008061018a8587611320565b604051633b83c43960e11b81529091506000906001600160a01b038316906377078872906101bc908a906004016118c4565b60206040518083038186803b1580156101d457600080fd5b505afa1580156101e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061020c91906114e4565b6001600160a01b03161461029f576040516359ff3fad60e11b81526001600160a01b0382169063b3fe7f5a9061024a9087908a9088906004016118f2565b60206040518083038186803b15801561026257600080fd5b505afa158015610276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029a9190611880565b6102a2565b60005b9695505050505050565b606060006102ba8486611320565b90506102c6818661134f565b604051631b499f5f60e21b81526001600160a01b03821690636d267d7c906102f490869089906004016118d8565b60006040518083038186803b15801561030c57600080fd5b505afa158015610320573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261034891908101906115e4565b95945050505050565b81516000908184600019830183811061036657fe5b6020026020010151600001519050836001600160a01b031663923bb7ff826040518263ffffffff1660e01b81526004016103a091906118c4565b60206040518083038186803b1580156103b857600080fd5b505afa1580156103cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f091906114e4565b6001600160a01b03166336d8bf93826040518263ffffffff1660e01b815260040161041b91906118c4565b60206040518083038186803b15801561043357600080fd5b505afa158015610447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046b9190611864565b1561047b5750600101905061047f565b5090505b92915050565b835160009081805b82811015610790576000816001850303905060008982815181106104ad57fe5b60200260200101516000015190506000896001600160a01b031663923bb7ff836040518263ffffffff1660e01b81526004016104e991906118c4565b60206040518083038186803b15801561050157600080fd5b505afa158015610515573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053991906114e4565b9050878315610560578b600185038151811061055157fe5b60200260200101516020015190505b600187038414156106fa576040516336d8bf9360e01b81526001600160a01b038316906336d8bf93906105979086906004016118c4565b60206040518083038186803b1580156105af57600080fd5b505afa1580156105c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e79190611864565b1561067357604051632627a09960e01b81526001600160a01b03831690632627a0999061061c908d90859088906004016118f2565b60206040518083038186803b15801561063457600080fd5b505afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c9190611880565b97506106f5565b60405162c9babf60e71b81526001600160a01b038316906364dd5f80906106a2908d90859088906004016118f2565b60206040518083038186803b1580156106ba57600080fd5b505afa1580156106ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f29190611880565b97505b61077d565b60405163ee665bed60e01b81526001600160a01b0383169063ee665bed9061072a90849087908b9060040161193f565b60206040518083038186803b15801561074257600080fd5b505afa158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a9190611880565b97505b50869450506001909201915061048d9050565b505050949350505050565b8351600090815b818110156109095760008782815181106107b857fe5b60200260200101516000015190506000876001600160a01b031663923bb7ff836040518263ffffffff1660e01b81526004016107f491906118c4565b60206040518083038186803b15801561080c57600080fd5b505afa158015610820573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084491906114e4565b905086831561086b5789600185038151811061085c57fe5b60200260200101516020015190505b6001600160a01b0382166385541e4482858715610888578961088a565b8a5b6040518463ffffffff1660e01b81526004016108a89392919061193f565b60206040518083038186803b1580156108c057600080fd5b505afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190611880565b955050600190920191506107a29050565b5050949350505050565b6000806109208385611320565b604051633b83c43960e11b81529091506001600160a01b0382169063770788729061094f9087906004016118c4565b60206040518083038186803b15801561096757600080fd5b505afa15801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f91906114e4565b949350505050565b805160408201516060838101518551608086015192949392811415610ba5576000876001886080015103815181106109db57fe5b60200260200101516000015190506000856001600160a01b031663923bb7ff836040518263ffffffff1660e01b8152600401610a1791906118c4565b60206040518083038186803b158015610a2f57600080fd5b505afa158015610a43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6791906114e4565b905088600189608001510381518110610a7c57fe5b602002602001015160200151945087604001516001600160a01b03166370a0823189602001516040518263ffffffff1660e01b8152600401610abe91906118c4565b60206040518083038186803b158015610ad657600080fd5b505afa158015610aea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0e9190611880565b9350806001600160a01b03166374df3b2f89602001518a60400151856040518463ffffffff1660e01b8152600401610b48939291906118f2565b60006040518083038186803b158015610b6057600080fd5b505afa158015610b74573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b9c91908101906115e4565b96505050610d84565b600087876080015181518110610bb757fe5b60200260200101516000015190506000856001600160a01b031663923bb7ff836040518263ffffffff1660e01b8152600401610bf391906118c4565b60206040518083038186803b158015610c0b57600080fd5b505afa158015610c1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4391906114e4565b90508760800151600014610cf55788600189608001510381518110610c6457fe5b6020026020010151602001519450846001600160a01b03166370a0823189602001516040518263ffffffff1660e01b8152600401610ca291906118c4565b60206040518083038186803b158015610cba57600080fd5b505afa158015610cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf29190611880565b93505b6020880151604051636fc9ab9160e11b81526001600160a01b0383169163df93572291610d2b9190899087908a90600401611915565b60006040518083038186803b158015610d4357600080fd5b505afa158015610d57573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d7f91908101906115e4565b965050505b5050505092915050565b835160009081866000198301838110610da357fe5b60200260200101516000015190506000866001600160a01b031663923bb7ff836040518263ffffffff1660e01b8152600401610ddf91906118c4565b60206040518083038186803b158015610df757600080fd5b505afa158015610e0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2f91906114e4565b90506001831115610e5857876002840381518110610e4957fe5b60200260200101516020015194505b6040516336d8bf9360e01b81526001600160a01b038216906336d8bf9390610e849085906004016118c4565b60206040518083038186803b158015610e9c57600080fd5b505afa158015610eb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed49190611864565b610f5d576040516390e6160560e01b81526001600160a01b038216906390e6160590610f08908990899087906004016118f2565b60206040518083038186803b158015610f2057600080fd5b505afa158015610f34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f589190611880565b610fdb565b60405163afd908d960e01b81526001600160a01b0382169063afd908d990610f8b90899086906004016118d8565b60206040518083038186803b158015610fa357600080fd5b505afa158015610fb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdb9190611880565b98975050505050505050565b6060600083836080015181518110610ffb57fe5b602090810291909101015151835160405163923bb7ff60e01b8152919250906000906001600160a01b0383169063923bb7ff9061103c9086906004016118c4565b60206040518083038186803b15801561105457600080fd5b505afa158015611068573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108c91906114e4565b6040860151606087015160808801519293509091156110c757876001886080015103815181106110b857fe5b60200260200101516020015191505b60018760a001510387608001511461117757878760800151815181106110e957fe5b6020026020010151602001516001600160a01b03166370a0823188602001516040518263ffffffff1660e01b815260040161112491906118c4565b60206040518083038186803b15801561113c57600080fd5b505afa158015611150573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111749190611880565b90505b60018760a0015103876080015114801561120857506040516336d8bf9360e01b81526001600160a01b038416906336d8bf93906111b89088906004016118c4565b60206040518083038186803b1580156111d057600080fd5b505afa1580156111e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112089190611864565b611296576020870151604051636092577960e01b81526001600160a01b03851691636092577991611242919086908a908790600401611915565b60006040518083038186803b15801561125a57600080fd5b505afa15801561126e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f5891908101906115e4565b6020870151604051631496678160e11b81526001600160a01b0385169163292ccf02916112cc919086908a908790600401611915565b60006040518083038186803b1580156112e457600080fd5b505afa1580156112f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fdb91908101906115e4565b600080836001600160a01b031663923bb7ff846040518263ffffffff1660e01b815260040161094f91906118c4565b604051633b83c43960e11b81526000906001600160a01b0384169063770788729061137e9085906004016118c4565b60206040518083038186803b15801561139657600080fd5b505afa1580156113aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ce91906114e4565b6001600160a01b0316141560405180604001604052806002815260200161323160f01b8152509061141b5760405162461bcd60e51b815260040161141291906119c3565b60405180910390fd5b505050565b803561047f81611a56565b600082601f83011261143b578081fd5b813561144e61144982611a06565b6119df565b818152915060208083019084810160608085028701830188101561147157600080fd5b6000805b868110156114d75782848b03121561148b578182fd5b611494836119df565b843561149f81611a56565b8152848601356114ae81611a56565b818701526040858101356114c181611a6e565b9082015286529484019492820192600101611475565b5050505050505092915050565b6000602082840312156114f5578081fd5b815161150081611a56565b9392505050565b60008060408385031215611519578081fd5b823561152481611a56565b9150602083013561153481611a56565b809150509250929050565b600080600060608486031215611553578081fd5b833561155e81611a56565b9250602084013561156e81611a56565b9150604084013561157e81611a56565b809150509250925092565b6000806000806080858703121561159e578081fd5b84356115a981611a56565b935060208501356115b981611a56565b925060408501356115c981611a56565b915060608501356115d981611a56565b939692955090935050565b600060208083850312156115f6578182fd5b825167ffffffffffffffff8082111561160d578384fd5b8185019150601f8681840112611621578485fd5b825161162f61144982611a06565b81815285810190858701885b848110156116af57815188018c603f820112611655578a8bfd5b8981015188811115611665578b8cfd5b611676818901601f19168c016119df565b81815260408f8184860101111561168b578d8efd5b61169a838e8401838701611a26565b5086525050928801929088019060010161163b565b50909a9950505050505050505050565b600080604083850312156116d1578182fd5b823567ffffffffffffffff8111156116e7578283fd5b6116f38582860161142b565b925050602083013561153481611a56565b60008060008060808587031215611719578384fd5b843567ffffffffffffffff81111561172f578485fd5b61173b8782880161142b565b94505060208501356115b981611a56565b60008060008060808587031215611761578384fd5b843567ffffffffffffffff811115611777578485fd5b6117838782880161142b565b945050602085013561179481611a56565b925060408501356117a481611a56565b9396929550929360600135925050565b60008082840360e08112156117c7578283fd5b833567ffffffffffffffff8111156117dd578384fd5b6117e98682870161142b565b93505060c0601f19820112156117fd578182fd5b5061180860c06119df565b6118158560208601611420565b81526118248560408601611420565b60208201526118368560608601611420565b60408201526080840135606082015260a0840135608082015260c084013560a0820152809150509250929050565b600060208284031215611875578081fd5b815161150081611a6e565b600060208284031215611891578081fd5b5051919050565b600081518084526118b0816020860160208601611a26565b601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b0393841681529183166020830152909116604082015260600190565b6001600160a01b039485168152928416602084015292166040820152606081019190915260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156119b657603f198886030184526119a4858351611898565b94509285019290850190600101611988565b5092979650505050505050565b6000602082526115006020830184611898565b90815260200190565b60405181810167ffffffffffffffff811182821017156119fe57600080fd5b604052919050565b600067ffffffffffffffff821115611a1c578081fd5b5060209081020190565b60005b83811015611a41578181015183820152602001611a29565b83811115611a50576000848401525b50505050565b6001600160a01b0381168114611a6b57600080fd5b50565b8015158114611a6b57600080fdfea164736f6c634300060c000a";

export class StrategyManagerV1__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<StrategyManagerV1> {
    return super.deploy(overrides || {}) as Promise<StrategyManagerV1>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StrategyManagerV1 {
    return super.attach(address) as StrategyManagerV1;
  }
  connect(signer: Signer): StrategyManager__factory {
    return super.connect(signer) as StrategyManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyManagerV1Interface {
    return new utils.Interface(_abi) as StrategyManagerV1Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): StrategyManagerV1 {
    return new Contract(address, _abi, signerOrProvider) as StrategyManagerV1;
  }
}
