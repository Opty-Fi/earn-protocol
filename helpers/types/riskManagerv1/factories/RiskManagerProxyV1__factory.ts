/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RiskManagerProxyV1, RiskManagerProxyV1Interface } from "../RiskManagerProxyV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldImplementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "NewImplementation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldPendingImplementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newPendingImplementation",
        type: "address",
      },
    ],
    name: "NewPendingImplementation",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "acceptImplementation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingRiskManagerImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registryContract",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "riskManagerImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPendingImplementation",
        type: "address",
      },
    ],
    name: "setPendingImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_registry",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106123803806106128339818101604052602081101561003357600080fd5b5051600280546001600160a01b0319166001600160a01b039092169190911790556105af806100636000396000f3fe6080604052600436106100595760003560e01c806309ed43c9146100e657806315ba56e51461011b57806328c1f99b1461014257806343aa3987146101735780638db4fab414610188578063a91ee0dc1461019d57610063565b3661006357600080fd5b600080546040516001600160a01b0390911690829036908083838082843760405192019450600093509091505080830381855af49150503d80600081146100c6576040519150601f19603f3d011682016040523d82523d6000602084013e6100cb565b606091505b505090506040513d6000823e8180156100e2573d82f35b3d82fd5b3480156100f257600080fd5b506101196004803603602081101561010957600080fd5b50356001600160a01b03166101d0565b005b34801561012757600080fd5b506101306102dd565b60408051918252519081900360200190f35b34801561014e57600080fd5b506101576103fb565b604080516001600160a01b039092168252519081900360200190f35b34801561017f57600080fd5b5061015761040a565b34801561019457600080fd5b50610157610419565b3480156101a957600080fd5b50610119600480360360208110156101c057600080fd5b50356001600160a01b0316610428565b60025460408051631cfe878d60e31b8152905161027b926001600160a01b03169163e7f43c68916004808301926020929190829003018186803b15801561021657600080fd5b505afa15801561022a573d6000803e3d6000fd5b505050506040513d602081101561024057600080fd5b505160408051808201909152601a81527f63616c6c6572206973206e6f7420746865206f70657261746f7200000000000060208201526104e1565b600180546001600160a01b038381166001600160a01b0319831617928390556040805192821680845293909116602083015280517fe945ccee5d701fc83f9b8aa8ca94ea4219ec1fcbd4f4cab4f0ea57c5c3e1d8159281900390910190a15050565b6001546000906001600160a01b03163314801561030457506001546001600160a01b031615155b61033f5760405162461bcd60e51b81526004018080602001828103825260218152602001806105826021913960400191505060405180910390fd5b60008054600180546001600160a01b038082166001600160a01b031980861682179687905590921690925560408051938316808552949092166020840152815190927fd604de94d45953f9138079ec1b82d533cb2160c906d1076d1f7ed54befbca97a92908290030190a1600154604080516001600160a01b038085168252909216602083015280517fe945ccee5d701fc83f9b8aa8ca94ea4219ec1fcbd4f4cab4f0ea57c5c3e1d8159281900390910190a160009250505090565b6002546001600160a01b031681565b6000546001600160a01b031681565b6001546001600160a01b031681565b60025460408051631cfe878d60e31b8152905161046e926001600160a01b03169163e7f43c68916004808301926020929190829003018186803b15801561021657600080fd5b610480816001600160a01b031661057b565b6104bf576040805162461bcd60e51b815260206004820152600b60248201526a085a5cd0dbdb9d1c9858dd60aa1b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b80336001600160a01b038416146105765760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561053b578181015183820152602001610523565b50505050905090810190601f1680156105685780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050565b3b15159056fe2170656e64696e675269736b4d616e61676572496d706c656d656e746174696f6ea164736f6c634300060c000a";

export class RiskManagerProxyV1__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(_registry: string, overrides?: Overrides & { from?: string | Promise<string> }): Promise<RiskManagerProxyV1> {
    return super.deploy(_registry, overrides || {}) as Promise<RiskManagerProxyV1>;
  }
  getDeployTransaction(
    _registry: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  attach(address: string): RiskManagerProxyV1 {
    return super.attach(address) as RiskManagerProxyV1;
  }
  connect(signer: Signer): RiskManagerProxyV1__factory {
    return super.connect(signer) as RiskManagerProxyV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RiskManagerProxyV1Interface {
    return new utils.Interface(_abi) as RiskManagerProxyV1Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): RiskManagerProxyV1 {
    return new Contract(address, _abi, signerOrProvider) as RiskManagerProxyV1;
  }
}
