{
  "title": "Odefi Vault Booster",
  "description": "Test cases for Odefi Vault Booster contract",
  "stories": [
    {
      "description": "Operator can add odefi vault",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "allOdefiVaults(uint256)",
          "args": {
            "index": 0
          },
          "expectedValue": "vault"
        }
      ]
    },
    {
      "description": "Non-Operator can't add odefi vault",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "admin",
          "expect": "fail",
          "message": "caller is not the operator"
        }
      ],
      "getActions": []
    },
    {
      "description": "Operator can set odefi vault",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVault(address,bool)",
          "args": {
            "contractName": "vault",
            "isEnabled": true
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "odefiVaultEnabled(address)",
          "args": {
            "contractName": "vault"
          },
          "expectedValue": true
        }
      ]
    },
    {
      "description": "Operator can set odefi rewarder",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "setODEFIRewarder(address,address)",
          "args": {
            "contractName": "vault",
            "addressName": "rewarder"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "rewarders(address)",
          "args": {
            "contractName": "vault"
          },
          "expectedValue": "rewarder"
        }
      ]
    },
    {
      "description": "Non-operator can't set odefi rewarder",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "setODEFIRewarder(address,address)",
          "args": {
            "contractName": "vault",
            "addressName": "rewarder"
          },
          "executer": "user1",
          "expect": "fail",
          "message": ""
        }
      ],
      "getActions": []
    },
    {
      "description": "Non-Operator can't set odefi vault",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVault(address,bool)",
          "args": {
            "contractName": "vault",
            "isEnabled": true
          },
          "executer": "admin",
          "expect": "fail",
          "message": "caller is not the operator"
        }
      ],
      "getActions": []
    },
    {
      "description": "Rewarder can set odefi vault rate",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVault(address,bool)",
          "args": {
            "contractName": "vault",
            "isEnabled": true
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setODEFIRewarder(address,address)",
          "args": {
            "contractName": "vault",
            "addressName": "rewarder"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVaultRate(address,uint256)",
          "args": {
            "contractName": "vault",
            "rate": "100"
          },
          "executer": "rewarder",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "odefiVaultRatePerSecond(address)",
          "args": {
            "contractName": "vault"
          },
          "expectedValue": "100"
        }
      ]
    },
    {
      "description": "Non-Rewarder can't set odefi vault rate",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVault(address,bool)",
          "args": {
            "contractName": "vault",
            "isEnabled": true
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVaultRate(address,uint256)",
          "args": {
            "contractName": "vault",
            "rate": "100"
          },
          "executer": "owner",
          "expect": "fail",
          "message": "!rewarder"
        }
      ],
      "getActions": []
    },
    {
      "description": "User shouldn't earn any more odefi after transfering all vault token",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVault(address,bool)",
          "args": {
            "contractName": "vault",
            "isEnabled": true
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setODEFIRewarder(address,address)",
          "args": {
            "contractName": "vault",
            "addressName": "rewarder"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVaultRate(address,uint256)",
          "args": {
            "contractName": "vault",
            "rate": "100"
          },
          "executer": "rewarder",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "erc20",
          "action": "approve(address,uint256)",
          "args": {
            "amount": "2000000000000000000",
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "vault",
          "action": "userDepositRebalance(uint256)",
          "args": {
            "amount": "2000000000000000000"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "vault",
          "action": "transfer(address,uint256)",
          "args": {
            "addressName": "admin",
            "amount": "2000000000000000000"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "claimableODEFI(address)",
          "args": {
            "addressName": "owner"
          },
          "expectedValue": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "claimableODEFI(address)",
          "args": {
            "addressName": "owner"
          },
          "expectedValue": ""
        }
      ]
    },
    {
      "description": "User should have odefi token equal its rate after running userDepositReBalance",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVault(address,bool)",
          "args": {
            "contractName": "vault",
            "isEnabled": true
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setODEFIRewarder(address,address)",
          "args": {
            "contractName": "vault",
            "addressName": "rewarder"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVaultRate(address,uint256)",
          "args": {
            "contractName": "vault",
            "rate": "100"
          },
          "executer": "rewarder",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "erc20",
          "action": "approve(address,uint256)",
          "args": {
            "amount": "2000000000000000000",
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "vault",
          "action": "userDepositRebalance(uint256)",
          "args": {
            "amount": "2000000000000000000"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "claimableODEFI(address)",
          "args": {
            "addressName": "owner"
          },
          "expectedValue": "100"
        }
      ]
    },
    {
      "description": "User shouldn't earn odefi if Vault isn't enabled",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVault(address,bool)",
          "args": {
            "contractName": "vault",
            "isEnabled": false
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setODEFIRewarder(address,address)",
          "args": {
            "contractName": "vault",
            "addressName": "rewarder"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVaultRate(address,uint256)",
          "args": {
            "contractName": "vault",
            "rate": "100"
          },
          "executer": "rewarder",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "erc20",
          "action": "approve(address,uint256)",
          "args": {
            "amount": "2000000000000000000",
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "vault",
          "action": "userDepositRebalance(uint256)",
          "args": {
            "amount": "2000000000000000000"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "claimableODEFI(address)",
          "args": {
            "addressName": "owner"
          },
          "expectedValue": "0"
        }
      ]
    },
    {
      "description": "User should earn odefi from both registered vaults",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVault(address,bool)",
          "args": {
            "contractName": "vault",
            "isEnabled": true
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setODEFIRewarder(address,address)",
          "args": {
            "contractName": "vault",
            "addressName": "rewarder"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVaultRate(address,uint256)",
          "args": {
            "contractName": "vault",
            "rate": "100"
          },
          "executer": "rewarder",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault2"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVault(address,bool)",
          "args": {
            "contractName": "vault2",
            "isEnabled": true
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setODEFIRewarder(address,address)",
          "args": {
            "contractName": "vault2",
            "addressName": "rewarder"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVaultRate(address,uint256)",
          "args": {
            "contractName": "vault2",
            "rate": "50"
          },
          "executer": "rewarder",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "erc20",
          "action": "approve(address,uint256)",
          "args": {
            "amount": "2000000000000000000",
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "vault",
          "action": "userDepositRebalance(uint256)",
          "args": {
            "amount": "2000000000000000000"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "erc20",
          "action": "approve(address,uint256)",
          "args": {
            "amount": "2000000000000000000",
            "contractName": "vault2"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "vault2",
          "action": "userDepositRebalance(uint256)",
          "args": {
            "amount": "2000000000000000000"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "claimableODEFI(address)",
          "args": {
            "addressName": "owner"
          },
          "expectedValue": "150"
        }
      ]
    },
    {
      "description": "User1 and User2 deposit, User1 depositRebalance. Then, both of them should have odefi token",
      "setActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVault(address,bool)",
          "args": {
            "contractName": "vault",
            "isEnabled": true
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setODEFIRewarder(address,address)",
          "args": {
            "contractName": "vault",
            "addressName": "rewarder"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVaultRate(address,uint256)",
          "args": {
            "contractName": "vault",
            "rate": "100"
          },
          "executer": "rewarder",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "erc20",
          "action": "transfer(address,uint256)",
          "args": {
            "amount": "2000000000000000000",
            "addressName": "user1"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "erc20",
          "action": "approve(address,uint256)",
          "args": {
            "amount": "1000000000000000000",
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "vault",
          "action": "userDeposit(uint256)",
          "args": {
            "amount": "1000000000000000000"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "erc20",
          "action": "approve(address,uint256)",
          "args": {
            "amount": "2000000000000000000",
            "contractName": "vault"
          },
          "executer": "user1",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "vault",
          "action": "userDeposit(uint256)",
          "args": {
            "amount": "2000000000000000000"
          },
          "executer": "user1",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "erc20",
          "action": "approve(address,uint256)",
          "args": {
            "amount": "1000000000000000000",
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "vault",
          "action": "userDepositRebalance(uint256)",
          "args": {
            "amount": "1000000000000000000"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "claimableODEFI(address)",
          "args": {
            "addressName": "owner"
          },
          "expectedValue": "50"
        },
        {
          "contract": "odefiVaultBooster",
          "action": "claimableODEFI(address)",
          "args": {
            "addressName": "user1"
          },
          "expectedValue": "50"
        }
      ]
    },
    {
      "description": "User should able to claim odefi token equal its rate after running userDepositReBalance",
      "setActions": [
        {
          "contract": "registry",
          "action": "setODEFIVaultBooster(address)",
          "args": {
            "contractName": "odefiVaultBooster"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "addOdefiVault(address)",
          "args": {
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVault(address,bool)",
          "args": {
            "contractName": "vault",
            "isEnabled": true
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setODEFIRewarder(address,address)",
          "args": {
            "contractName": "vault",
            "addressName": "rewarder"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "setOdefiVaultRate(address,uint256)",
          "args": {
            "contractName": "vault",
            "rate": "100"
          },
          "executer": "rewarder",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "erc20",
          "action": "approve(address,uint256)",
          "args": {
            "amount": "2000000000000000000",
            "contractName": "vault"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "vault",
          "action": "userDepositRebalance(uint256)",
          "args": {
            "amount": "2000000000000000000"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "odefiVaultBooster",
          "action": "claimODEFI(address)",
          "args": {
            "addressName": "owner"
          },
          "executer": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "odefiVaultBooster",
          "action": "claimableODEFI(address)",
          "args": {
            "addressName": "owner"
          },
          "expectedValue": "0"
        },
        {
          "contract": "odefi",
          "action": "balanceOf(address)",
          "args": {
            "addressName": "owner"
          },
          "expectedValue": "100"
        }
      ]
    }
  ]
}
