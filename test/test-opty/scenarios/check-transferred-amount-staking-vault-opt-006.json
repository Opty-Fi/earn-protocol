{
  "title": "Check transferred amount to staking vaults",
  "description": "Test cases to check the actual amount transferred to staking vault contracts",
  "stories": [
    {
      "description": "User should be able to stake OPTY tokens - optyStakingVault1D",
      "setActions": [
        {
          "contract": "opty",
          "action": "approve(address,uint256)",
          "args": {
            "spender": "optyStakingVault1D",
            "stakedOPTY": "100000000"
          },
          "executor": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "optyStakingVault1D",
          "action": "userStake(uint256)",
          "args": {
            "stakedOPTY": "100000000"
          },
          "executor": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "optyStakingVault1D",
          "action": "balance()",
          "expectedValue": "95000000"
        },
        {
          "contract": "optyStakingVault1D",
          "action": "balanceOf(address)",
          "expectedValue": "95000000"
        }
      ]
    },
    {
      "description": "User should be able to stake OPTY tokens - optyStakingVault30D",
      "setActions": [
        {
          "contract": "opty",
          "action": "approve(address,uint256)",
          "args": {
            "spender": "optyStakingVault30D",
            "stakedOPTY": "100000000"
          },
          "executor": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "optyStakingVault30D",
          "action": "userStake(uint256)",
          "args": {
            "stakedOPTY": "100000000"
          },
          "executor": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "optyStakingVault30D",
          "action": "balance()",
          "expectedValue": "95000000"
        },
        {
          "contract": "optyStakingVault30D",
          "action": "balanceOf(address)",
          "expectedValue": "95000000"
        }
      ]
    },
    {
      "description": "User should be able to stake OPTY tokens - optyStakingVault60D",
      "setActions": [
        {
          "contract": "opty",
          "action": "approve(address,uint256)",
          "args": {
            "spender": "optyStakingVault60D",
            "stakedOPTY": "100000000"
          },
          "executor": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "optyStakingVault60D",
          "action": "userStake(uint256)",
          "args": {
            "stakedOPTY": "100000000"
          },
          "executor": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "optyStakingVault60D",
          "action": "balance()",
          "expectedValue": "95000000"
        },
        {
          "contract": "optyStakingVault60D",
          "action": "balanceOf(address)",
          "expectedValue": "95000000"
        }
      ]
    },
    {
      "description": "User should be able to stake OPTY tokens - optyStakingVault180D",
      "setActions": [
        {
          "contract": "opty",
          "action": "approve(address,uint256)",
          "args": {
            "spender": "optyStakingVault180D",
            "stakedOPTY": "100000000"
          },
          "executor": "owner",
          "expect": "success",
          "message": ""
        },
        {
          "contract": "optyStakingVault180D",
          "action": "userStake(uint256)",
          "args": {
            "stakedOPTY": "100000000"
          },
          "executor": "owner",
          "expect": "success",
          "message": ""
        }
      ],
      "getActions": [
        {
          "contract": "optyStakingVault180D",
          "action": "balance()",
          "expectedValue": "95000000"
        },
        {
          "contract": "optyStakingVault180D",
          "action": "balanceOf(address)",
          "expectedValue": "95000000"
        }
      ]
    }
  ]
}
